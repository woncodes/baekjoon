# 문제
# 도현이는 바구니를 총 N개 가지고 있고, 각각의 바구니에는 1번부터 N번까지 번호가 순서대로 적혀져 있다. 바구니는 일렬로 놓여져 있고, 가장 왼쪽 바구니를 1번째 바구니, 그 다음 바구니를 2번째 바구니, ..., 가장 오른쪽 바구니를 N번째 바구니라고 부른다. 

# 도현이는 앞으로 M번 바구니의 순서를 역순으로 만들려고 한다. 도현이는 한 번 순서를 역순으로 바꿀 때, 순서를 역순으로 만들 범위를 정하고, 그 범위에 들어있는 바구니의 순서를 역순으로 만든다.

# 바구니의 순서를 어떻게 바꿀지 주어졌을 때, M번 바구니의 순서를 역순으로 만든 다음, 바구니에 적혀있는 번호를 가장 왼쪽 바구니부터 출력하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 N (1 ≤ N ≤ 100)과 M (1 ≤ M ≤ 100)이 주어진다.

# 둘째 줄부터 M개의 줄에는 바구니의 순서를 역순으로 만드는 방법이 주어진다. 방법은 i j로 나타내고, 왼쪽으로부터 i번째 바구니부터 j번째 바구니의 순서를 역순으로 만든다는 뜻이다. (1 ≤ i ≤ j ≤ N)

# 도현이는 입력으로 주어진 순서대로 바구니의 순서를 바꾼다.

# 출력
# 모든 순서를 바꾼 다음에, 가장 왼쪽에 있는 바구니부터 바구니에 적혀있는 순서를 공백으로 구분해 출력한다.

# 예제 입력 1 
# 5 4 [1, 2, 3, 4, 5]
# 1 2 [2, 1, 3, 4, 5]
# 3 4 [2, 1, 4, 3, 5]
# 1 4 [3, 1, 4, 2, 5]
# 2 2 [3, 1, 4, 2, 5]
# 예제 출력 1 
# 3 4 1 2 5

# sequence[start:stop:step]

import sys
# n: 1번부터 n번까지의 바구니
# m: 바구니의 순서를 m번 역순으로 만든다
n, m = map(int, sys.stdin.readline().split())
bag = [i for i in range(1, n + 1)] # [1, ...., n] 바구니 생성

# i번째 바구니부터 j번째 바구니의 순서를 역순으로 만든다
for _ in range(m):
  i, j = map(int, sys.stdin.readline().split())
  # 슬라이싱을 이용해 i-1번째부터 j번째까지의 부분을 뒤집기
  bag[i-1:j] = bag[i-1:j][::-1]
  # i = 2, j = 4인 경우
  # bag[2 - 1:4] = bag[1:3] = [2, 3, 4]
  # bag[2 - 1:4][::-1] = [4, 3, 2] 범위 :처음부터 :끝까지의 요소들을 -1역순으로
  # bag[i-1:j] = [4, 3, 2]

print(*bag)